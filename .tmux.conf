set-option -g default-shell $SHELL
set -g default-terminal "screen-256color"

# default <prefix> `

# <prefix> f5: change prefix to C-b
# <prefix> f6: change prefix to `
unbind C-b
set-option -g prefix `
bind-key F5 set-option -g prefix C-b
bind-key F6 set-option -g prefix `

set-option -g allow-rename off
set-option -sg escape-time 0

# <C-S-left>/<C-S-right>: move windows left or right
bind-key -n C-S-left swap-window -t -1
bind-key -n C-S-right swap-window -t +1

# <C-left>/<C-right>: select left or right windows
#unbind-key C-right
#bind-key -n C-right next-window
#unbind-key C-left
#bind-key -n C-left previous-window

# bindings: pane movements
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# <C+hjkl>: both for vim and tmux (plugin required)
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# <C-f>: fullsize screen
bind-key -n M-f resize-pane -Z
bind r source-file ~/.tmux.conf \; display "Reloaded config."

# <leader><Esc> for entering 'scroll-mode'
# v [visual]: to begin select
unbind [
bind Escape copy-mode
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
# <prefix> s,v
bind s split-window -v
bind v split-window -h

# Shift-arrows to resize panes
bind-key -n "M-Left" resize-pane -L 2
bind-key -n "M-Right" resize-pane -R 2
bind-key -n "M-Up" resize-pane -U 2
bind-key -n "M-Down" resize-pane -D 2

bind-key -n "M-h" previous-window
bind-key -n "M-l" next-window

# <prefix> S: open small split at the bottom
bind-key S split-window -v \; resize-pane -D 25

# <prefix> V: open small split at the bottom with vim open
bind-key V split-window -v \; resize-pane -D 25\; send-keys 'vim' C-m

# <prefix> i: with irc open
unbind i
bind-key i split-window -v \; resize-pane -D 25\; send-keys 'irc' C-m

# <prefix> C: open config vim session
bind-key C new-window \; send-keys 'vim -S ~/.vimsessions/dotfiles' C-m \; rename-window "CONFIGS"

# kill-page with large X
bind x kill-pane

unbind L
bind L last-window

setw -g mode-keys vi

# style
set-option -g status-bg "#000000"
set-option -g status-fg colour15 #yellow

# style: current active item
set-window-option -g window-status-current-fg colour15
set-window-option -g window-status-current-bg colour1
setw -g window-status-format " #I #W "
setw -g window-status-current-format " #I #W "

# style: left menu
set-option -g status-left '[SID:#S]'
set -g status-right-length 100
set-option -g status-utf8 on

set-option -g status-right '::: #[fg=colour15]↓ #(mac-network) ↑ #[fg=colour32]:::#[fg=colour15] #(uptime | sed "s/.*://g")#[fg=colour32] ::: #[fg=colour15]%H:%M'

# source tmux.local if exists
if '[ -f ~/.tmux.conf.local ]' 'source ~/.tmux.conf.local'

set-option -g pane-border-fg colour7
set-option -g pane-border-bg colour8

set-option -g pane-active-border-bg "#008209"
set-option -g pane-border-style bg="#2B2B2B"

if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'

# Update status bar every 5 second
set -g status-interval 5

#bind-key -t m vi-copy send "0 t:" C-m "vim " \; paste-buffer \; send C-m
#bind -n F12 set-window-option synchronize-panes
setw -g window-status-separator ""
